{
  "openapi": "3.0.3",
    "info": {
    "title": "WebMLOpenEO-API",
    "version": "1.0.0" 
  },
  "paths": {
    "/api": {
      "get": {
        "summary": "Get the OpenAPI-Document as Documentation of the API",
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/openeocubes": {
      "get": {
        "summary": "Get the openeo-gdalcubes-R-backend landing page of its STAC-API",
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/classify": {
      "post": {
        "summary": "Train model and classify map",
        "description": "Takes parameter in JSON-file, trains model on R-Backend and response with a JSON-File which contains the model itself and the classification results",
        "requestBody": {
          "description": "JSON-file for training and classification",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassifyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful classification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassifyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Invalid requestBody",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/getdemodata": {
      "get": {
        "summary": "Get an example Json-Request for classify-Endpoint",
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassifyRequest"
                }
              }
            }
          }
        }
      }
    },
    "/api/getmodel": {
      "get": {
        "summary": "Get the calculated model to an uuid as .rds-file",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "UUID of model to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/rds": {
                
              }
            }
          },
          "404": {
            "description": "Id not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/getsentinelimg": {
      "post": {
        "summary": "Get a sentinel RGB-image for specific time and area",
        "description": "Takes parameter in JSON-file, ask STAC-API on openEO-conform R-Backend and response with a TIFF which contains the sentinel-data",
        "requestBody": {
          "description": "JSON-file with time and area of interest",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sentinelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful classification",
            "content": {
              "image/tiff": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Invalid requestBody",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ClassifyRequest": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string",
            "description": "Name of ML-model",
            "enum": [
              "RandomForest"
            ]
          },
          "TOI": {
            "$ref": "#/components/schemas/TOI"
          },
          "AOI": {
            "$ref": "#/components/schemas/AOI"
          },
          "tot": {
            "type": "object",
            "description": "Time of training",
            "properties": {
              "start_date": {
                "type": "string",
                "format": "date"
              },
              "end_date": {
                "type": "string",
                "format": "date"
              }
            },
            "required": ["start_date", "end_date"]
          },
          "Training_Data": {
            "type": "object",
            "description": "Data for training wrapped in a FeatureCollection",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["FeatureCollection"]
              },
              "bbox": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                }
              },
              "features": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["Feature"]
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "class": {
                          "type": "string"
                        }
                      },
                      "required": ["class"]
                    },
                    "geometry": {
                      "type": "object",
                      "properties": {
                        "coordinates": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "number"
                              }
                            }
                          }
                        },
                        "type": {
                          "type": "string",
                          "enum": ["Polygon"]
                        }
                      },
                      "required": ["coordinates", "type"]
                    }
                  },
                  "required": ["type", "properties", "geometry"]
                }
              }
            },
          "required": ["type", "features"]
          },
          "Hyperparameter": {
            "type": "array",
            "description": "Hyperparameter of ML-Model",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the hyperparameter"
                },
                "value": {
                  "type": "string",
                  "description": "The value of the hyperparameter"
                }
              },
              "required": ["name", "value"]
            }
          },
          "Resolution": {
            "type": "number",
            "description": "Resolution of classification-result"
          }
        },
        "required": ["model", "TOI", "AOI", "tot", "Training_Data", "Resolution"]
      },
      "ClassifyResponse": {
        "type": "object"
      },
      "sentinelRequest": {
        "type": "object",
        "properties": {
          "TOI": {
            "$ref": "#/components/schemas/TOI"
          },
          "AOI": {
            "$ref": "#/components/schemas/AOI"
          }
        },
        "required": ["TOI", "AOI"]
      },
      "TOI": {
        "type": "object",
        "description": "Time of interest (for classification or sentinel-IMG)",
        "properties": {
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "type": "string",
            "format": "date"
          }
        },
        "required": ["start_date", "end_date"]
      },
      "AOI": {
        "type": "object",
        "description": "Area of interest (for classification or sentinel-IMG)",
        "properties": {
          "geometry": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "Polygon"
                ]
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            "required": ["type", "coordinates"]
          }
        },
        "required": ["geometry"]
      }
    }
  }
}
      